3.2.19 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@options{ :@children[o:Sass::Tree::ImportNode:@imported_filename"shared;0;@;	[ :
@linei:@imported_file0o:Sass::Tree::CommentNode
:
@type:silent:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;@;	[ ;io:Sass::Tree::VariableNode:
@expro:Sass::Script::String	;:identifier;"all;@;i:
@name" default-transition-property;@;	[ ;i:@guarded"!defaulto;;o:Sass::Script::Number:@numerator_units["s;i:@original"1s;@;i:@denominator_units[ ;" default-transition-duration;@;	[ ;i;"!defaulto;;o:Sass::Script::Bool;F;@;i;" default-transition-function;@;	[ ;i;"!defaulto;;o;;F;@;i;"default-transition-delay;@;	[ ;i;"!defaulto;;o:Sass::Script::List	;[o;	;;;"transform;@;io;	;;;"transform-origin;@;i;@:@separator:
comma;i;"#transitionable-prefixed-values;@;	[ ;i;"!defaulto;
;;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;@;	[ ;i!o:Sass::Tree::MixinDefNode;"transition-property;T;@;	[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@:
@linei1;i1:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@splat0;i1:@keywords{ :
@args[o:Sass::Script::Variable	;"property-1;@:@underscored_name"property_1;i1:@operator:eq0[o:Sass::Tree::VariableNode:
@expro;;"unquote;@;0;i1;{ ;[o;	;"property-1;@;"property_1;i1;"property-1;@:@children[ ;i1:@guarded0o;;o:Sass::Script::Funcall;"compact;@:@splat0;i2:@keywords{ :
@args[o:Sass::Script::Variable	;"property-1;@:@underscored_name"property_1;i2o;&	;"property-2;@;'"property_2;i2o;&	;"property-3;@;'"property_3;i2o;&	;"property-4;@;'"property_4;i2o;&	;"property-5;@;'"property_5;i2o;&	;"property-6;@;'"property_6;i2o;&	;"property-7;@;'"property_7;i2o;&	;"property-8;@;'"property_8;i2o;&	;"property-9;@;'"property_9;i2o;&	;"property-10;@;'"property_10;i2;"properties;@;	[ ;i2;0u;!Å[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit:
@linei30[o:Sass::Tree::PropNode;[" -webkit-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition;@:@splat0;	i3:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;@;	i3o; 	;"properties;@;"properties;	i3:@prop_syntax:new;@:
@tabsi :@children[ ;	i3u;!Á[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla:
@linei40[o:Sass::Tree::PropNode;["-moz-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition;@:@splat0;	i4:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;@;	i4o; 	;"properties;@;"properties;	i4:@prop_syntax:new;@:
@tabsi :@children[ ;	i4u;!¹[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera:
@linei50[o:Sass::Tree::PropNode;["-o-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition;@:@splat0;	i5:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"-o;@;	i5o; 	;"properties;@;"properties;	i5:@prop_syntax:new;@:
@tabsi :@children[ ;	i5o:Sass::Tree::PropNode;["transition-property;o;&	;"properties;@;'"properties;i6:@prop_syntax:new;@:
@tabsi ;	[ ;i6;#0;i0;%[[o;&;"property-1;@;'"property_1o;&	;" default-transition-property;@;'" default_transition_property;i&[o;&;"property-2;@;'"property_2o;;F;@;i'[o;&;"property-3;@;'"property_3o;;F;@;i([o;&;"property-4;@;'"property_4o;;F;@;i)[o;&;"property-5;@;'"property_5o;;F;@;i*[o;&;"property-6;@;'"property_6o;;F;@;i+[o;&;"property-7;@;'"property_7o;;F;@;i,[o;&;"property-8;@;'"property_8o;;F;@;i-[o;&;"property-9;@;'"property_9o;;F;@;i.[o;&;"property-10;@;'"property_10o;;F;@;i/o;
;;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;@;	[ ;i9o; ;"transition-duration;T;@;	[u;!Ù[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@:
@lineiI;iI:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@splat0;iI:@keywords{ :
@args[o:Sass::Script::Variable	;"duration-1;@:@underscored_name"duration_1;iI:@operator:eq0[o:Sass::Tree::VariableNode:
@expro;;"unquote;@;0;iI;{ ;[o;	;"duration-1;@;"duration_1;iI;"duration-1;@:@children[ ;iI:@guarded0o;;o;";"compact;@;#0;iJ;${ ;%[o;&	;"duration-1;@;'"duration_1;iJo;&	;"duration-2;@;'"duration_2;iJo;&	;"duration-3;@;'"duration_3;iJo;&	;"duration-4;@;'"duration_4;iJo;&	;"duration-5;@;'"duration_5;iJo;&	;"duration-6;@;'"duration_6;iJo;&	;"duration-7;@;'"duration_7;iJo;&	;"duration-8;@;'"duration_8;iJo;&	;"duration-9;@;'"duration_9;iJo;&	;"duration-10;@;'"duration_10;iJ;"durations;@;	[ ;iJ;0o:Sass::Tree::MixinNode;"experimental;@;	[ ;#0;iM;${ ;%[o;	;;;"transition-duration;@;iKo;&	;"durations;@;'"durations;iKo;	;;;"	-moz;@;iLo;	;;;"-webkit;@;iLo;	;;;"-o;@;iLo:!Sass::Script::UnaryOperation	;@;iL:@operando;	;;;"-ms;@;iL:@operator:noto;-	;@;iL;.o;	;;;"-khtml;@;iL;/;0o;	;;;"official;@;iL;#0;iH;%[[o;&;"duration-1;@;'"duration_1o;&	;" default-transition-duration;@;'" default_transition_duration;i>[o;&;"duration-2;@;'"duration_2o;;F;@;i?[o;&;"duration-3;@;'"duration_3o;;F;@;i@[o;&;"duration-4;@;'"duration_4o;;F;@;iA[o;&;"duration-5;@;'"duration_5o;;F;@;iB[o;&;"duration-6;@;'"duration_6o;;F;@;iC[o;&;"duration-7;@;'"duration_7o;;F;@;iD[o;&;"duration-8;@;'"duration_8o;;F;@;iE[o;&;"duration-9;@;'"duration_9o;;F;@;iF[o;&;"duration-10;@;'"duration_10o;;F;@;iGo;
;;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;@;	[ ;iPo; ;"transition-timing-function;T;@;	[o;;o;";"unquote;@;#0;ia;${ ;%[o;&	;"function-1;@;'"function_1;ia;"function-1;@;	[ ;ia;0o;;o;";"compact;@;#0;ib;${ ;%[o;&	;"function-1;@;'"function_1;ibo;&	;"function-2;@;'"function_2;ibo;&	;"function-3;@;'"function_3;ibo;&	;"function-4;@;'"function_4;ibo;&	;"function-5;@;'"function_5;ibo;&	;"function-6;@;'"function_6;ibo;&	;"function-7;@;'"function_7;ibo;&	;"function-8;@;'"function_8;ibo;&	;"function-9;@;'"function_9;ibo;&	;"function-10;@;'"function_10;ib;"functions;@;	[ ;ib;0o;,;"experimental;@;	[ ;#0;ie;${ ;%[o;	;;;"transition-timing-function;@;ico;&	;"functions;@;'"functions;ico;	;;;"	-moz;@;ido;	;;;"-webkit;@;ido;	;;;"-o;@;ido;-	;@;id;.o;	;;;"-ms;@;id;/;0o;-	;@;id;.o;	;;;"-khtml;@;id;/;0o;	;;;"official;@;id;#0;i`;%[[o;&;"function-1;@;'"function_1o;&	;" default-transition-function;@;'" default_transition_function;iV[o;&;"function-2;@;'"function_2o;;F;@;iW[o;&;"function-3;@;'"function_3o;;F;@;iX[o;&;"function-4;@;'"function_4o;;F;@;iY[o;&;"function-5;@;'"function_5o;;F;@;iZ[o;&;"function-6;@;'"function_6o;;F;@;i[[o;&;"function-7;@;'"function_7o;;F;@;i\[o;&;"function-8;@;'"function_8o;;F;@;i][o;&;"function-9;@;'"function_9o;;F;@;i^[o;&;"function-10;@;'"function_10o;;F;@;i_o;
;;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;@;	[ ;iho; ;"transition-delay;T;@;	[u;!Ê[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@:
@lineix;ix:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@splat0;ix:@keywords{ :
@args[o:Sass::Script::Variable	;"delay-1;@:@underscored_name"delay_1;ix:@operator:eq0[o:Sass::Tree::VariableNode:
@expro;;"unquote;@;0;ix;{ ;[o;	;"delay-1;@;"delay_1;ix;"delay-1;@:@children[ ;ix:@guarded0o;;o;";"compact;@;#0;iy;${ ;%[o;&	;"delay-1;@;'"delay_1;iyo;&	;"delay-2;@;'"delay_2;iyo;&	;"delay-3;@;'"delay_3;iyo;&	;"delay-4;@;'"delay_4;iyo;&	;"delay-5;@;'"delay_5;iyo;&	;"delay-6;@;'"delay_6;iyo;&	;"delay-7;@;'"delay_7;iyo;&	;"delay-8;@;'"delay_8;iyo;&	;"delay-9;@;'"delay_9;iyo;&	;"delay-10;@;'"delay_10;iy;"delays;@;	[ ;iy;0o;,;"experimental;@;	[ ;#0;i|;${ ;%[o;	;;;"transition-delay;@;izo;&	;"delays;@;'"delays;izo;	;;;"	-moz;@;i{o;	;;;"-webkit;@;i{o;	;;;"-o;@;i{o;-	;@;i{;.o;	;;;"-ms;@;i{;/;0o;-	;@;i{;.o;	;;;"-khtml;@;i{;/;0o;	;;;"official;@;i{;#0;iw;%[[o;&;"delay-1;@;'"delay_1o;&	;"default-transition-delay;@;'"default_transition_delay;im[o;&;"delay-2;@;'"delay_2o;;F;@;in[o;&;"delay-3;@;'"delay_3o;;F;@;io[o;&;"delay-4;@;'"delay_4o;;F;@;ip[o;&;"delay-5;@;'"delay_5o;;F;@;iq[o;&;"delay-6;@;'"delay_6o;;F;@;ir[o;&;"delay-7;@;'"delay_7o;;F;@;is[o;&;"delay-8;@;'"delay_8o;;F;@;it[o;&;"delay-9;@;'"delay_9o;;F;@;iu[o;&;"delay-10;@;'"delay_10o;;F;@;ivo;
;;;["*/* Transition all-in-one shorthand */;@;	[ ;io; ;"single-transition;T;@;	[o;,;"transition;@;	[ ;#0;i;${ ;%[o;";"compact;@;#0;i;${ ;%[o;	;[	o;&	;"property;@;'"property;io;&	;"duration;@;'"duration;io;&	;"function;@;'"function;io;&	;"
delay;@;'"
delay;i;@;:
space;i;#0;i;%[	[o;&;"property;@;'"propertyo;&	;" default-transition-property;@;'" default_transition_property;i}[o;&;"duration;@;'"durationo;&	;" default-transition-duration;@;'" default_transition_duration;i~[o;&;"function;@;'"functiono;&	;" default-transition-function;@;'" default_transition_function;i[o;&;"
delay;@;'"
delayo;&	;"default-transition-delay;@;'"default_transition_delay;io; ;"transition;T;@;	[u;!÷[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"default;@:
@linei;i:@operand1o:Sass::Script::Variable	:
@name"transition-1;@:@underscored_name"transition_1;i:@operator:eq0[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall;"compact;@:@splat0;i:@keywords{ :
@args[o:Sass::Script::List	;[	o;	;" default-transition-property;@;" default_transition_property;io;	;" default-transition-duration;@;" default_transition_duration;io;	;" default-transition-function;@;" default_transition_function;io;	;"default-transition-delay;@;"default_transition_delay;i;@:@separator:
space;i;"transition-1;@:@children[ ;i:@guarded0o;;o;;F;@;i;"transitions;@;	[ ;i;0u;![o:Sass::Script::Operation
:@options{ :@operand2o; 
;@;o:Sass::Script::String	:
@type:identifier:@value"	list;@:
@linei;i:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@splat0;i:@keywords{ :
@args[o;;"nth;@;0;i;{ ;[o:Sass::Script::Variable	;"transition-1;@:@underscored_name"transition_1;io:Sass::Script::Number:@numerator_units[ ;i:@original"1;@;i:@denominator_units[ :@operator:eq;i;o; 
;@;o;	;	;
;"	list;@;i;i;o;;"type-of;@;0;i;{ ;[o;	;"transition-1;@;"transition_1;i;;;:andu:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall:
@name"compact:@options{ :@splat0:
@linei:@keywords{ :
@args[o:Sass::Script::Variable	;"transition-1;	@
:@underscored_name"transition_1;io;	;"transition-2;	@
;"transition_2;io;	;"transition-3;	@
;"transition_3;io;	;"transition-4;	@
;"transition_4;io;	;"transition-5;	@
;"transition_5;io;	;"transition-6;	@
;"transition_6;io;	;"transition-7;	@
;"transition_7;io;	;"transition-8;	@
;"transition_8;io;	;"transition-9;	@
;"transition_9;io;	;"transition-10;	@
;"transition_10;i;"transitions;	@
:@children[ ;i:@guarded0[o:Sass::Tree::VariableNode:
@expro;;"	join;@;0;i;{ ;[o;	;"transition-1;@;"transition_1;io;;"compact;@;0;i;{ ;[o;	;"transition-2;@;"transition_2;io;	;"transition-3;@;"transition_3;io;	;"transition-4;@;"transition_4;io;	;"transition-5;@;"transition_5;io;	;"transition-6;@;"transition_6;io;	;"transition-7;@;"transition_7;io;	;"transition-8;@;"transition_8;io;	;"transition-9;@;"transition_9;io;	;"transition-10;@;"transition_10;io;	;	;
;"
comma;@;i;"transitions;@:@children[ ;i:@guarded0o;;o;";"comma-list;@;#0;i;${ ;%[ ;"delays;@;	[ ;i;0o;;o;;F;@;i;"has-delays;@;	[ ;i;0o;;o;";"comma-list;@;#0;i;${ ;%[ ;"webkit-value;@;	[ ;i;0o;;o;";"comma-list;@;#0;i;${ ;%[ ;"moz-value;@;	[ ;i;0o;;o;";"comma-list;@;#0;i;${ ;%[ ;"o-value;@;	[ ;i;0o;
;;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;@;	[ ;i o:Sass::Tree::EachNode;T;@:	@var"transition;	[o;
;;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;@;	[ ;i£o;;o;";"nth;@;#0;i¥;${ ;%[o;&	;"transition;@;'"transition;i¥o;;[ ;i;"1;@;i¥;[ ;"property;@;	[ ;i¥;0o;;o;;F;@;i¦;"duration;@;	[ ;i¦;0o;;o;;F;@;i§;"timing-function;@;	[ ;i§;0o;;o;;F;@;i¨;"
delay;@;	[ ;i¨;0u;![o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::Number:@numerator_units[ :@valuei:@original"1;@:
@linei©:@denominator_units[ ;i©:@operand1o:Sass::Script::Funcall:
@name"length;@:@splat0;i©:@keywords{ :
@args[o:Sass::Script::Variable	;"transition;@:@underscored_name"transition;i©:@operator:gt0[o:Sass::Tree::VariableNode:
@expro;;"nth;@;0;i©;{ ;[o;	;"transition;@;"transition;i©o;;	[ ;
i;"2;@;i©;@;"duration;@:@children[ ;i©:@guarded0u;![o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::Number:@numerator_units[ :@valuei:@original"2;@:
@lineiª:@denominator_units[ ;iª:@operand1o:Sass::Script::Funcall:
@name"length;@:@splat0;iª:@keywords{ :
@args[o:Sass::Script::Variable	;"transition;@:@underscored_name"transition;iª:@operator:gt0[o:Sass::Tree::VariableNode:
@expro;;"nth;@;0;iª;{ ;[o;	;"transition;@;"transition;iªo;;	[ ;
i;"3;@;iª;@;"timing-function;@:@children[ ;iª:@guarded0u;!Y[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::Number:@numerator_units[ :@valuei:@original"3;@:
@linei«:@denominator_units[ ;i«:@operand1o:Sass::Script::Funcall:
@name"length;@:@splat0;i«:@keywords{ :
@args[o:Sass::Script::Variable	;"transition;@:@underscored_name"transition;i«:@operator:gt0[o:Sass::Tree::VariableNode:
@expro;;"nth;@;0;i«;{ ;[o;	;"transition;@;"transition;i«o;;	[ ;
i	;"4;@;i«;@;"
delay;@:@children[ ;i«:@guarded0o;;o:Sass::Script::Bool;
T;@;i«;"has-delays;@;[ ;i«;0o;
;;;[";/* If a delay is provided without a timing function */;@;	[ ;i­u;!g[o:Sass::Script::Operation
:@options{ :@operand2o:!Sass::Script::UnaryOperation	;@:
@linei®:@operando:Sass::Script::Variable	:
@name"
delay;@:@underscored_name"
delay;	i®:@operator:not;	i®:@operand1o:Sass::Script::Funcall;"is-time;@:@splat0;	i®:@keywords{ :
@args[o;	;"timing-function;@;"timing_function;	i®;:and0[o:Sass::Tree::VariableNode:
@expro;	;"timing-function;@;"timing_function;	i®;"
delay;@:@children[ ;	i®:@guarded0o;;o:Sass::Script::Bool:@valueF;@;	i®;"timing-function;@;[ ;	i®;0o;;o;;T;@;	i®;"has-delays;@;[ ;	i®;0o;
;;;["9/* Keep a list of delays in case one is specified */;@;	[ ;i°o;;o;";"append;@;#0;i±;${ ;%[o;&	;"delays;@;'"delays;i±o;";"if;@;#0;i±;${ ;%[o;&	;"
delay;@;'"
delay;i±o;&	;"
delay;@;'"
delay;i±o;;["s;i ;"0s;@;i±;[ ;"delays;@;	[ ;i±;0o;;o;";"append;@;#0;i³;${ ;%[o;&	;"webkit-value;@;'"webkit_value;i³o;";"compact;@;#0;i³;${ ;%[o;	;[o;";"prefixed-for-transition;@;#0;i³;${ ;%[o;	;;;"-webkit;@;i³o;&	;"property;@;'"property;i³o;&	;"duration;@;'"duration;i³o;&	;"timing-function;@;'"timing_function;i³;@;;1;i³;"webkit-value;@;	[ ;i³;0o;;o;";"append;@;#0;i´;${ ;%[o;&	;"moz-value;@;'"moz_value;i´o;";"compact;@;#0;i´;${ ;%[o;	;[	o;";"prefixed-for-transition;@;#0;i´;${ ;%[o;	;;;"	-moz;@;i´o;&	;"property;@;'"property;i´o;&	;"duration;@;'"duration;i´o;&	;"timing-function;@;'"timing_function;i´o;&	;"
delay;@;'"
delay;i´;@;;1;i´;"moz-value;@;	[ ;i´;0o;;o;";"append;@;#0;iµ;${ ;%[o;&	;"o-value;@;'"o_value;iµo;";"compact;@;#0;iµ;${ ;%[o;	;[	o;";"prefixed-for-transition;@;#0;iµ;${ ;%[o;	;;;"-o;@;iµo;&	;"property;@;'"property;iµo;&	;"duration;@;'"duration;iµo;&	;"timing-function;@;'"timing_function;iµo;&	;"
delay;@;'"
delay;iµ;@;;1;iµ;"o-value;@;	[ ;iµ;0;i¢:
@listo;&	;"transitions;@;'"transitions;i¢u;!Ý[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit:
@linei¸0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo; 	;"webkit-value;@;"webkit_value;	i¸:@prop_syntax:new;@:
@tabsi :@children[ ;	i¸o:Sass::Tree::CommentNode
:
@type:silent;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;@;[ ;	i¹u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@name"has-delays:@options{ :@underscored_name"has_delays:
@lineiº0[o:Sass::Tree::PropNode;["-webkit-transition-delay:@valueo; 	;"delays;@;"delays;	iº:@prop_syntax:new;@:
@tabsi :@children[ ;	iºu;!#[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla:
@linei»0[o:Sass::Tree::PropNode;["-moz-transition:@valueo; 	;"moz-value;@;"moz_value;	i»:@prop_syntax:new;@:
@tabsi :@children[ ;	i»u;![o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera:
@linei¼0[o:Sass::Tree::PropNode;["-o-transition:@valueo; 	;"o-value;@;"o_value;	i¼:@prop_syntax:new;@:
@tabsi :@children[ ;	i¼o;(;["transition;o;&	;"transitions;@;'"transitions;i½;);*;@;+i ;	[ ;i½;#0;i;%[[o;&;"transition-1;@;'"transition_1o;	;;;"default;@;i[o;&;"transition-2;@;'"transition_2o;;F;@;i[o;&;"transition-3;@;'"transition_3o;;F;@;i[o;&;"transition-4;@;'"transition_4o;;F;@;i[o;&;"transition-5;@;'"transition_5o;;F;@;i[o;&;"transition-6;@;'"transition_6o;;F;@;i[o;&;"transition-7;@;'"transition_7o;;F;@;i[o;&;"transition-8;@;'"transition_8o;;F;@;i[o;&;"transition-9;@;'"transition_9o;;F;@;i[o;&;"transition-10;@;'"transition_10o;;F;@;io;
;;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;@;	[ ;iÀo:Sass::Tree::FunctionNode;"comma-list;T;@;	[o:Sass::Tree::ReturnNode	;o;";"	join;@;#0;iÂ;${ ;%[o;	;[ ;@;;1;iÂo;&	;"	list;@;'"	list;iÂo;	;;;"
comma;@;iÂ;@;	[ ;iÂ;#0;iÁ;%[[o;&;"	list;@;'"	listo;	;[ ;@;;1;iÁo;
;;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;@;	[ ;iÅo;5;"prefixed-for-transition;T;@;	[u;!®[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"	list;@:
@lineiÇ;iÇ:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@splat0;iÇ:@keywords{ :
@args[o:Sass::Script::Variable	;"property;@:@underscored_name"property;iÇ:@operator:equ:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@name"
index:@options{ :@splat0:
@lineiÎ:@keywords{ :
@args[o:Sass::Script::Variable	;"#transitionable-prefixed-values;@:@underscored_name"#transitionable_prefixed_values;	iÎo;	;"property;@;"property;	iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:
@name"property:@options{ :@underscored_name"property:
@lineiÑ;	@
:@children[ ;iÑ[o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@aftero;;0;@:@originally_textF:	@mido;	;"property;@;"property;	iÏ;	iÏ:@whitespace_after0:@beforeo;;0;@;:originally_text;o:Sass::Script::String	:
@type:identifier:@value"-;@;	iÏ;	iÏ;F;0:@whitespace_before0;0;@;F;o;	;"prefix;@;"prefix;	iÏ;	iÏ;0;0;i;@:@children[ ;	iÏ[o:Sass::Tree::VariableNode:
@expro;;"comma-list;@;0;iÈ;{ ;[ ;"new-list;@:@children[ ;iÈ:@guarded0o:Sass::Tree::EachNode:@has_childrenT;@:	@var"v;[o;;o;;"append;@;0;iÊ;{ ;[o;	;"new-list;@;"new_list;iÊo;;"prefixed-for-transition;@;0;iÊ;{ ;[o;	;"prefix;@;"prefix;iÊo;	;"v;@;"v;iÊ;"new-list;@;[ ;iÊ;0;iÉ:
@listo;	;"property;@;"property;iÉo:Sass::Tree::ReturnNode	;o;	;"new-list;@;"new_list;iÌ;@;[ ;iÌ;#0;iÆ;%[[o;&;"prefix;@;'"prefix0[o;&;"property;@;'"property0o;
;;;["7/* Checks if the value given is a unit of time. */;@;	[ ;iÖo;5;"is-time;T;@;	[u;![o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"number;@:
@lineiØ;iØ:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@splat0;iØ:@keywords{ :
@args[o:Sass::Script::Variable	;"
value;@:@underscored_name"
value;iØ:@operator:equ:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@valueF:@options{ :
@lineiÛ;	@	:@children[ ;
iÛ[o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;@;iÙ:@operando;	;@;iÙ;o;;"
index;@;0;iÙ;{ ;[o:Sass::Script::List	;[o;	;	;
;"s;@;iÙo;	;	;
;"ms;@;iÙ;@:@separator:
space;iÙo;;"	unit;@;0;iÙ;{ ;[o;	;"
value;@;"
value;iÙ;:not;;;@:@children[ ;iÙ;#0;i×;%[[o;&;"
value;@;'"
value0;i